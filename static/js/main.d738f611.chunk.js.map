{"version":3,"sources":["index.js"],"names":["useState","require","render","id","App","_useState","window","localStorage","getItem","JSON","parse","_useState2","Object","_Users_cogoport_Desktop_to_do_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","todos","seTodos","_useState3","_useState4","todoText","seTodoText","_useState5","_useState6","editText","setEditText","_useState7","_useState8","setPreEditText","taskDone","td","map","todo","ind","_Users_cogoport_Desktop_to_do_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","taskStatus","useEffect","setItem","stringify","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","key","type","value","onChange","e","target","onClick","concat","_Users_cogoport_Desktop_to_do_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","task","editval","checked","todoID","filter","document","getElementById"],"mappings":"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","file":"static/js/main.d738f611.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nconst { useState } = require(\"react\");\nconst { render } = require(\"react-dom\");\nlet id = 0;\nconst App = () => {\n\n    const [todos, seTodos] = useState(()=>{if(window.localStorage.getItem(\"Todo\")){\n        if (JSON.parse(window.localStorage.getItem(\"Todo\"))){\n            return JSON.parse(window.localStorage.getItem(\"Todo\"));\n        }\n        return []\n    }\n    return []});\n    const [todoText, seTodoText] = useState(\"\");\n    const [editText, setEditText] = useState(\"\");\n    const [preEditText, setPreEditText] = useState(editText);\n    \n    const AddToDo = () => {\n        id = id + 1;\n        seTodos([...todos, {ind:id, task:todoText, editval: false, taskStatus: 0}]);\n        // window.localStorage.setItem(\"Todo\", JSON.stringify(todos));\n        seTodoText(\"\");\n    }\n\n    const onDelete = (todoID) => {\n        seTodos(todos.filter(todo=>todo.ind!==todoID));\n        // window.localStorage.setItem(\"Todo\",todos);\n    }\n\n    const Edit = (td) => {\n        (td.editval)?\n        seTodos(todos.map((todo)=>{\n            setPreEditText(editText);\n            return (\n                (todo.ind===td.ind)?{...todo, task : (editText), editval : (!td.editval)}:{...todo}\n            )\n        })):\n        seTodos(todos.map((todo)=>{\n            return (\n                (todo.ind===td.ind)?{...todo, editval : (!td.editval)}:{...todo}\n            )\n        }));\n        setEditText(\"\");\n        // (td.editval)?\n        // window.localStorage.setItem(\"Todo\",todos):\n        // window.localStorage.setItem(\"Todo\",todos);\n    }\n\n    const taskDone = (td) => {\n        seTodos(todos.map((todo)=>{\n            return (\n                (todo.ind===td.ind)?{...todo, taskStatus : (!td.taskStatus)}:{...todo}\n            )\n        }));\n        // window.localStorage.setItem(\"Todo\",todos);\n    }\n\n    useEffect(()=>{\n        window.localStorage.setItem(\"Todo\",JSON.stringify(todos));\n    }, [todos]);\n\n    return (\n        <>\n        <input key = \"Input-Box\" type=\"text\" value={todoText} onChange={(e)=>{seTodoText(e.target.value)}}></input>\n        <button type='submit' onClick={AddToDo}>Add</button>\n        {todos.map( (todo)=>{\n            return (\n                <p key = {todo.ind}>\n                    {\n                    (todo.taskStatus)?\n                    (<input type=\"checkbox\" onClick={()=>{taskDone(todo)}} checked></input>):\n                    (<input type=\"checkbox\" onClick={()=>{taskDone(todo)}}></input>)\n                    }\n                    &emsp;\n                    <button onClick={()=>{onDelete(todo.ind)}}>\n                        Delete\n                    </button>&emsp;\n                    <button onClick={()=>{Edit(todo)}}>\n                    {\n                    (todo.editval)?\n                    (\"Done\"):\n                    (\"Edit\")\n                    }\n                    </button>&emsp;\n                    {\n                    (todo.editval)?\n                    (<input type=\"text\" key = \"Edit-Box\" value={editText} onChange={(e)=>{setEditText(e.target.value)}}></input>):\n                    ((todo.taskStatus)?\n                    (<s>{todo.task}</s>):\n                    (todo.task))\n                    }\n                </p>\n            )\n        }\n        )}\n        </>\n    );\n}\n\nrender(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}